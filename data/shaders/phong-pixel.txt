// Credits: http://www.mathematik.uni-marburg.de/~thormae/lectures/graphics1/code/WebGLShaderLightMat/ShaderLightMat.html
// July 7 2015

// #version 330

precision mediump float;

// uniform mat4 projection, modelview, normalMat;
// uniform int mode;

varying vec4 forFragColor;

// const vec3 lightPos  = vec3(1.0, 1.0, 1.0);
// const vec3 diffuseColor = vec3(0.5, 0.0, 0.0);
const vec3 specColor    = vec3(1.0, 1.0, 1.0);

varying float vLambertian;
varying float vSpecular;

varying float vColour;

uniform sampler2D sampler;
uniform int textured; // TODO: bool (?)
varying highp vec2 vTexCoord; //


void main(){

  //

  if (textured == 1) {
    vec4 texColour = texture2D(sampler, vec2(vTexCoord.s, vTexCoord.t));
    forFragColor = vec4(vLambertian*texColour.rgb + vSpecular*specColor, 1.0);
    gl_FragColor = forFragColor;
  } else {
    gl_FragColour = vec4(vLambertian*inputColour.rgb + vSpecular*specColor, 1.0);
  }

}
