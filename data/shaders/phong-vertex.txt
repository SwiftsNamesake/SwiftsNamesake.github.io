// Credits: http://www.mathematik.uni-marburg.de/~thormae/lectures/graphics1/code/WebGLShaderLightMat/ShaderLightMat.html
// July 7 2015

// #version 330

precision mediump float;

attribute vec3 inputPosition;
attribute vec3 inputNormal;
attribute vec4 inputColour;
attribute vec2 inputTexCoord;

// TODO: More than one light, colour, intensity
attribute vec3 light; // Light position

uniform mat4 projection, modelview, normalMat;
uniform int mode;

varying vec4 forFragColor;

// const vec3 lightPos  = vec3(1.0, 1.0, 1.0);
// const vec3 diffuseColor = vec3(0.5, 0.0, 0.0);
const vec3 specColor    = vec3(1.0, 1.0, 1.0);

uniform sampler2D sampler;
uniform int textured; // TODO: bool (?)
varying highp vec2 vTexCoord; //


void main(){
  gl_Position = projection * modelview * vec4(inputPosition, 1.0);
  vTexCoord   = inputTexCoord;
}
